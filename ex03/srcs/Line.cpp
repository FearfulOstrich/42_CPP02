/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Line.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: antoine <antoine@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/08/21 14:38:06 by antoine           #+#    #+#             */
/*   Updated: 2022/08/21 17:01:34 by antoine          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "Line.hpp"

/*==============================================================================
	Constructors.
==============================================================================*/

Line::Line(void)
{
	_A = Point();
	_B = Point();
	return ;
}

Line::Line(Line const &other)
{
	*this = other;
	return ;
}

Line::Line(Point const &A, Point const &B): _A(A), _B(B)
{
	return ;
}

/*==============================================================================
	Destructor.
==============================================================================*/

Line::~Line(void)
{
	return ;
}

/*==============================================================================
	Assignment operator.
==============================================================================*/

Line	&Line::operator=(Line const &other)
{
	this->set_A(other.get_A());
	this->set_B(other.get_B());
	return (*this);
}

/*==============================================================================
	Getters.
==============================================================================*/

Point const	&Line::get_A(void) const
{
	return (this->_A);
}

Point const	&Line::get_B(void) const
{
	return (this->_B);
}

/*==============================================================================
	Setters.
==============================================================================*/

void	Line::set_A(Point const &A)
{
	this->_A = A;
	return ;
}

void	Line::set_B(Point const &B)
{
	this->_B = B;
	return ;
}

/*==============================================================================
	Point distance.
==============================================================================*/

int	Line::p_dist(Point const P) const
{
	Fixed	a, b, c;

	a = Fixed(-1) * (this->_B.get_y() - this->_A.get_y());
	b = this->_B.get_x() - this->_A.get_x();
	c = Fixed(-1) * (a * this->_A.get_x() + b * this->_A.get_y());
	return (a * P.get_x() + b * P.get_y() + c).toInt();
}
